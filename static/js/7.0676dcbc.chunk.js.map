{"version":3,"sources":["components/signin.js","components/signup.js","pages/signin-up.js"],"names":["SignIn","dispatch","useDispatch","event","a","preventDefault","target","elements","email","password","signInEmailAndPasswordStart","value","css","width","onSubmit","label","name","id","autoComplete","type","display","gridTemplateColumns","gridGap","variant","marginTop","background","colors","border","color","onClick","signInGoogleStart","SignUp","confirmPassword","alert","signupStart","SignInUpPage","justifyContent","margin","mq"],"mappings":"wMAMA,SAASA,IACP,IAAMC,EAAWC,cADD,4CAEhB,WAA4BC,GAA5B,mBAAAC,EAAA,sDACED,EAAME,iBADR,EAG4BF,EAAMG,OAAOC,SAAhCC,EAHT,EAGSA,MAAOC,EAHhB,EAGgBA,SACdR,EACES,YAA4B,CAC1BF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,SAPzB,4CAFgB,sBAehB,OACE,mBACEC,IAAK,CACHC,MAAO,YAFX,UAKE,yDACA,mEACA,oBAAMC,SAvBM,4CAuBZ,UACE,YAAC,IAAD,CACEC,MAAO,QACPC,KAAK,QACLC,GAAG,eACHC,aAAa,gBACbC,KAAK,UAEP,YAAC,IAAD,CACEJ,MAAO,WACPG,aAAa,mBACbF,KAAK,WACLC,GAAG,kBACHE,KAAK,aAEP,mBACEP,IAAK,CACHQ,QAAS,OACTC,oBAAqB,kBACrBC,QAAS,OAJb,UAOE,YAAC,IAAD,CACEC,QAAQ,UACRJ,KAAK,SACLP,IAAK,CACHY,UAAW,OACX,UAAW,CACTC,WAAYC,IACZC,OAAO,aAAD,OAAeD,KACrBE,MAAOF,MARb,oBAcA,YAAC,IAAD,CACEP,KAAK,SACLU,QAAS,kBAAM5B,EAAS6B,gBACxBP,QAAQ,SACRX,IAAK,CACHY,UAAW,QALf,0CC3DV,SAASO,IACP,IAAM9B,EAAWC,cADD,4CAEhB,WAA4BC,GAA5B,qBAAAC,EAAA,yDACED,EAAME,iBADR,EAE6CF,EAAMG,OAAOC,SAAjDC,EAFT,EAESA,MAAOC,EAFhB,EAEgBA,SAAUuB,EAF1B,EAE0BA,gBAEpBvB,EAASE,QAAUqB,EAAgBrB,MAJzC,uBAKIsB,MAAM,wBALV,0BASEhC,EAASiC,YAAY,CAAC1B,MAAOA,EAAMG,MAAOF,SAAUA,EAASE,SAT/D,4CAFgB,sBAchB,OACE,mBACEC,IAAK,CACHC,MAAO,YAFX,UAKE,uDACA,mEACA,oBAAMC,SAtBM,4CAsBZ,UACE,YAAC,IAAD,CAAWC,MAAO,eAAgBC,KAAK,cAAcC,GAAG,gBACxD,YAAC,IAAD,CACEF,MAAO,QACPC,KAAK,QACLE,aAAa,gBACbD,GAAG,eACHE,KAAK,UAEP,YAAC,IAAD,CACEJ,MAAO,WACPG,aAAa,eACbF,KAAK,WACLC,GAAG,kBACHE,KAAK,aAEP,YAAC,IAAD,CACEJ,MAAO,mBACPC,KAAK,kBACLE,aAAa,eACbD,GAAG,0BACHE,KAAK,aAEP,YAAC,IAAD,CACEI,QAAQ,UACRX,IAAK,CACHY,UAAW,OACX,UAAW,CACTC,WAAYC,IACZC,OAAO,aAAD,OAAeD,KACrBE,MAAOF,MAPb,0B,YClBOS,UA5Bf,WAAyB,IAAD,EACtB,OACE,mBACEvB,KAAG,GACDQ,QAAS,OACTgB,eAAgB,gBAChBC,OAAQ,SACRxB,MAAO,SAJN,cAKAyB,IAAW,CACVzB,MAAO,OACPO,QAAS,OACTC,oBAAqB,QARtB,cAUD,QAVC,eAWEiB,IAAW,CACVzB,MAAO,OACPO,QAAS,OACTC,oBAAqB,SAdxB,GADL,UAoBE,YAACrB,EAAD,IACA,YAAC+B,EAAD","file":"static/js/7.0676dcbc.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport {Button, FormInput} from 'components/lib'\nimport {signInGoogleStart, signInEmailAndPasswordStart} from 'action'\nimport {useDispatch} from 'react-redux'\nimport * as colors from 'styles/colors'\n\nfunction SignIn() {\n  const dispatch = useDispatch()\n  async function handleSubmit(event) {\n    event.preventDefault()\n\n    const {email, password} = event.target.elements\n    dispatch(\n      signInEmailAndPasswordStart({\n        email: email.value,\n        password: password.value,\n      }),\n    )\n    // await auth.signInWithEmailAndPassword(email.value, password.value)\n  }\n\n  return (\n    <div\n      css={{\n        width: '23.75rem',\n      }}\n    >\n      <h2>I already have an account</h2>\n      <p>Sign in with your email and password</p>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label={'email'}\n          name=\"email\"\n          id=\"signin-email\"\n          autoComplete=\"current-email\"\n          type=\"email\"\n        />\n        <FormInput\n          label={'password'}\n          autoComplete=\"current-password\"\n          name=\"password\"\n          id=\"signin-password\"\n          type=\"password\"\n        />\n        <div\n          css={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, auto)',\n            gridGap: '1em',\n          }}\n        >\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            css={{\n              marginTop: '1rem',\n              '&:hover': {\n                background: colors.base,\n                border: `solid 1px ${colors.text}`,\n                color: colors.text,\n              },\n            }}\n          >\n            SIGNIN\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(signInGoogleStart())}\n            variant=\"google\"\n            css={{\n              marginTop: '1rem',\n            }}\n          >\n            SIGN IN WITH GOOGLE\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport {SignIn}\n","/** @jsxImportSource @emotion/react */\nimport {FormInput, Button} from 'components/lib'\nimport {useDispatch} from 'react-redux'\nimport {signupStart} from 'action'\nimport * as colors from 'styles/colors'\n\nfunction SignUp() {\n  const dispatch = useDispatch()\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const {email, password, confirmPassword} = event.target.elements\n\n    if (password.value !== confirmPassword.value) {\n      alert(\"Password don't match\")\n      return\n    }\n\n    dispatch(signupStart({email: email.value, password: password.value}))\n  }\n\n  return (\n    <div\n      css={{\n        width: '23.75rem',\n      }}\n    >\n      <h2>I do not have a account</h2>\n      <p>Sign up with your email and password</p>\n      <form onSubmit={handleSubmit}>\n        <FormInput label={'Display Name'} name=\"displayName\" id=\"signup-name\" />\n        <FormInput\n          label={'Email'}\n          name=\"email\"\n          autoComplete=\"current-email\"\n          id=\"signup-email\"\n          type=\"email\"\n        />\n        <FormInput\n          label={'Password'}\n          autoComplete=\"new-password\"\n          name=\"password\"\n          id=\"signup-password\"\n          type=\"password\"\n        />\n        <FormInput\n          label={'Confirm Password'}\n          name=\"confirmPassword\"\n          autoComplete=\"new-password\"\n          id=\"signup-confirm-password\"\n          type=\"password\"\n        />\n        <Button\n          variant=\"primary\"\n          css={{\n            marginTop: '1rem',\n            '&:hover': {\n              background: colors.base,\n              border: `solid 1px ${colors.text}`,\n              color: colors.text,\n            },\n          }}\n        >\n          SIGNUP\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport {SignUp}\n","/** @jsxImportSource @emotion/react */\nimport {SignIn} from 'components/signin'\nimport {SignUp} from 'components/signup'\nimport * as mq from 'styles/media-queries'\n\nfunction SignInUpPage() {\n  return (\n    <div\n      css={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '0 auto',\n        width: '840px',\n        [mq.small]: {\n          width: '100%',\n          display: 'grid',\n          gridTemplateColumns: '1fr',\n        },\n        '> div': {\n          [mq.small]: {\n            width: '100%',\n            display: 'grid',\n            gridTemplateColumns: '1fr',\n          },\n        },\n      }}\n    >\n      <SignIn />\n      <SignUp />\n    </div>\n  )\n}\n\nexport default SignInUpPage\n"],"sourceRoot":""}