{"version":3,"sources":["components/collection-item.js","components/collection-preview.js","pages/shop.js","components/collection-overview.js","components/collection.js"],"names":["CollectionItem","item","dispatch","useDispatch","imageUrl","name","price","css","position","display","flexDirection","height","flex","opacity","mq","backgroundImage","width","backgroundPosition","backgroundSize","alignItems","justifyContent","marginTop","paddingRight","color","colors","variant","bottom","left","right","border","background","onClick","addCartItem","CollectionPreview","title","items","match","useParams","fontSize","textAlign","collectionId","toUpperCase","gridTemplateColumns","gridGap","map","collectionItem","id","WithShopPage","WrapedComponent","isLoading","props","NotFoundPage","React","WithCollectionOverview","collections","useSelector","state","shopReducer","collectionsList","Object","keys","collect","collectionProps","filter","index","WithCollectionPage","collectionFinded","margin","ShopPage","a","fetchShopDataStart","getData","path","element"],"mappings":"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","file":"static/js/6.983050c9.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport {Button} from 'components/lib'\nimport {useDispatch} from 'react-redux'\nimport {addCartItem} from 'action'\nimport * as colors from 'styles/colors'\nimport * as mq from 'styles/media-queries'\n\nfunction CollectionItem({item}) {\n  const dispatch = useDispatch()\n  const {imageUrl, name, price} = item\n  return (\n    <div\n      css={{\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '21.875rem',\n        flex: '1',\n        '&:hover': {\n          '> div': {\n            opacity: 0.7,\n          },\n          '> button': {\n            display: 'block',\n          },\n        },\n        '> button': {\n          display: 'none',\n          [mq.small]: {\n            display: 'block',\n          },\n        },\n      }}\n    >\n      <div\n        css={{\n          backgroundImage: `url(${imageUrl})`,\n          width: '100%',\n          height: '95%',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      />\n      <div\n        css={{\n          height: '5%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginTop: '0.5em',\n          paddingRight: '1.5em',\n          color: colors.text,\n        }}\n      >\n        <p>{name}</p>\n        <span>{price}</span>\n      </div>\n      <Button\n        variant=\"secondary\"\n        css={{\n          position: 'absolute',\n          bottom: '3.5em',\n          width: '80%',\n          left: '10%',\n          right: '10%',\n          opacity: 0.7,\n          border: `solid 1px ${colors.text}`,\n          '&:hover': {\n            opacity: 0.9,\n            background: colors.text,\n            color: colors.base,\n          },\n        }}\n        onClick={() => dispatch(addCartItem(item))}\n      >\n        ADD TO CART\n      </Button>\n    </div>\n  )\n}\n\nexport {CollectionItem}\n","/** @jsxImportSource @emotion/react */\nimport {CollectionItem} from 'components/collection-item'\nimport {useParams} from 'react-router-dom'\nimport * as mq from 'styles/media-queries'\n\nfunction CollectionPreview({title, items}) {\n  const match = useParams('hats')\n\n  return (\n    <div css={{display: 'flex', flexDirection: 'column'}}>\n      <h2\n        css={{\n          fontSize: '1.75rem',\n          textAlign: match.collectionId ? 'center' : 'initial',\n        }}\n      >\n        {title?.toUpperCase()}\n      </h2>\n      <div\n        css={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          gridGap: '4em',\n          [mq.small]: {\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridGap: '1em',\n          },\n          [mq.medium]: {\n            gridGap: '2em',\n          },\n          [mq.iphone5]: {\n            gridTemplateColumns: '1fr',\n          },\n        }}\n      >\n        {items?.map((collectionItem) => {\n          const id = `${title}-${collectionItem.id}`\n          return <CollectionItem key={id} item={{...collectionItem, id}} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport {CollectionPreview}\n","/** @jsxImportSource @emotion/react */\nimport * as React from 'react'\nimport {CollectionOverview} from 'components/collection-overview'\nimport {CollectionPage} from 'components/collection'\nimport {Routes, Route} from 'react-router-dom'\nimport {FullPageSpinner} from 'components/lib'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchShopDataStart} from 'action'\nimport {GET_COLLECTIONS} from 'gql'\nimport {useQuery} from '@apollo/client'\n\nfunction WithShopPage(WrapedComponent) {\n  function Component({isLoading, ...props}) {\n    return isLoading ? <FullPageSpinner /> : <WrapedComponent {...props} />\n  }\n\n  return Component\n}\n\nconst NotFoundPage = React.lazy(() => import('pages/not-found'))\n\nconst WithCollectionOverview = WithShopPage(CollectionOverview)\nconst WithCollectionPage = WithShopPage(CollectionPage)\n\nfunction ShopPage() {\n  const dispatch = useDispatch()\n  // const {data, loading: isLoading} = useQuery(GET_COLLECTIONS)\n  const {collections, isLoading} = useSelector((state) => state.shopReducer)\n\n  React.useEffect(() => {\n    async function getData() {\n      dispatch(fetchShopDataStart())\n    }\n\n    getData()\n  }, [dispatch])\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <WithCollectionOverview\n              isLoading={isLoading}\n              // collections={data?.collections}\n            />\n          }\n        />\n        <Route\n          path=\":collectionId\"\n          element={<WithCollectionPage isLoading={isLoading} />}\n        />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default ShopPage\n","import {useSelector} from 'react-redux'\nimport {CollectionPreview} from 'components/collection-preview'\n\nfunction CollectionOverview() {\n  const {collections} = useSelector((state) => state.shopReducer)\n  const collectionsList = Object.keys(collections).map(\n    (collect) => collections[collect],\n  )\n  // const collectionsList = collections ?? []\n\n  return (\n    <>\n      {collectionsList.map(({id, items, ...collectionProps}) => (\n        <CollectionPreview\n          key={id}\n          items={items.filter((item, index) => index < 4)}\n          {...collectionProps}\n        />\n      ))}\n    </>\n  )\n}\n\nexport {CollectionOverview}\n","/** @jsxImportSource @emotion/react */\nimport {useParams} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport {CollectionPreview} from 'components/collection-preview'\nimport {useQuery} from '@apollo/client'\nimport * as colors from 'styles/colors'\n// import {GET_COLLECTIONS_BY_TITLE} from 'gql'\n\nfunction CollectionPage() {\n  const match = useParams('hats')\n  const {collections} = useSelector((state) => state.shopReducer)\n  const collectionFinded = collections[match.collectionId]\n  // const {data} = useQuery(GET_COLLECTIONS_BY_TITLE, {\n  //   variables: {title: match.collectionId},\n  // })\n  // const collectionFinded = data?.getCollectionsByTitle\n\n  if (!collectionFinded) {\n    return (\n      <div\n        css={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          color: colors.red,\n          fontSize: '1rem',\n          height: 'calc(100vh - 5rem)',\n        }}\n      >\n        <h3\n          css={{\n            margin: '0.2rem',\n          }}\n        >\n          There was an error:\n        </h3>\n        <span>Product not found</span>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CollectionPreview\n        items={collectionFinded?.items}\n        title={collectionFinded?.title}\n      />\n    </div>\n  )\n}\n\nexport {CollectionPage}\n"],"sourceRoot":""}